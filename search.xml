<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>QT编译过程中的一些错误处理</title>
      <link href="posts/2031f6c8.html"/>
      <url>posts/2031f6c8.html</url>
      
        <content type="html"><![CDATA[<h1 id="QT编译过程中的一些错误处理"><a href="#QT编译过程中的一些错误处理" class="headerlink" title="QT编译过程中的一些错误处理"></a>QT编译过程中的一些错误处理</h1><h2 id="1、undefined-reference-to-vtable-for-GoToCellDialog’"><a href="#1、undefined-reference-to-vtable-for-GoToCellDialog’" class="headerlink" title="1、undefined reference to `vtable for GoToCellDialog’"></a>1、undefined reference to `vtable for GoToCellDialog’</h2><p> 造成这个错误的原因可能是编写继承自QObject类及其子类的自定义类的时候，忘记加入Q_OBJECT宏，编译或者运行报错后手动添加了Q_OBJECT再次编译引起的。</p><p>解决方案：手动删除xxx.pro.user文件，clean项目，重新编译即可。</p><h2 id="2、Object-connect-No-such-slot-xxxx"><a href="#2、Object-connect-No-such-slot-xxxx" class="headerlink" title="2、Object::connect: No such slot xxxx"></a>2、Object::connect: No such slot xxxx</h2><p>&emsp;解决方案： </p><p>  &emsp;&emsp;①查看类声明中有没有Q_OBJECT </p><p>  &emsp;&emsp;②声明的函数要加声明: </p><blockquote><p>&emsp;&emsp;private slots:<br>&emsp;&emsp;&emsp;void xxxx();</p></blockquote><p>&emsp;&emsp;③检查槽函数名拼写是否有误，以及对应的signal和slot的参数是否一致  </p><p>…未完待续，持续更新中…</p>]]></content>
      
      
      <categories>
          
          <category> Qt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始的hexo个人博客搭建过程</title>
      <link href="posts/9a1e054d.html"/>
      <url>posts/9a1e054d.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp; 时隔2年，又一次重新搭建了博客。折腾了大半个月，原本只是想找一份以前写的文章测试一下文章的格式，翻遍了有道笔记，愣是没找到一篇稍微能看的下去的，此时心情之复杂，难以言喻。总之测试还是要做的，就记录一下搭建hexo博客的过程,顺便复习一下markdown语法。<br>&emsp; hexo框架是一位朋友推荐给我的，之前的博客用的也是这个框架，总而言之想要用hexo搭建个人博客的确是非常方便。</p><hr><h2 id="安装必要的软件"><a href="#安装必要的软件" class="headerlink" title="安装必要的软件"></a>安装必要的软件</h2><ul><li><strong>1.1、安装node.js</strong></li></ul><p>​&emsp;​&emsp; 安装版本推荐12，貌似node.js-v14和hexo有部分内容不兼容，使用的时候会有警告，为了避免后续使用出现问题，还是提早就使用12版本的好，下载地址如下：</p><p>​&emsp;​​&emsp;​​&emsp;​<a href="https://nodejs.org/zh-cn/download/releases/">node.js历史版本</a></p><ul><li><p><strong>1.2、安装git</strong></p></li><li><p><strong>1.3、安装windows powershell(linux用户可直接跳过这一步)</strong></p><p>详细安装过程建议参考以下链接</p></li></ul><p>​&emsp;​​&emsp;​​&emsp;​<a href="https://zhuanlan.zhihu.com/p/137595941">Windows Terminal 完美配置 PowerShell 7.1</a></p><h2 id="Github配置"><a href="#Github配置" class="headerlink" title="Github配置"></a>Github配置</h2><ul><li><strong>2.1、创建托管仓库</strong></li></ul><p>​&emsp;&emsp;​ 新建一个仓库，名字必须设置为 xxx.github.io，其中xxx为github用户名。比如github用户名为clock,那么仓库名称即为clock.github.io，其他名称无法作为博客托管仓库。（这里发现一个彩蛋，如果新建的仓库名为xxx.github时——xxx为用户名，该仓库会作为你的github主页展示）。</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210130113804.png"></p><ul><li><strong>2.2、绑定个人域名</strong></li></ul><p>​&emsp;​&emsp; 不打算绑定个人域名or不打算申请个人域名的请直接跳过。</p><p>​&emsp;​&emsp; 首先需要一个域名，可以选择阿里云、腾讯云等等，反正哪里性价比高选哪里。有了域名之后，进入xxx.github.io仓库，点击setting。</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210130080118.png"></p><p>​&emsp;​&emsp; 在GitHub Pages 中设置你自己的域名</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/image-20210130080345436.png"></p><p>​&emsp;​&emsp; 其中Custom domain 中填入域名，点击save之后，若解析正确，在上方会显示“Your site is published at xxxxxx”，如上图另一个框所示。</p><ul><li><strong>2.3、配置SSH key</strong></li></ul><p>​&emsp;​&emsp; 执行如下命令</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t ras -C &quot;邮件地址&quot;</span><br></pre></td></tr></table></figure><p>​&emsp;​&emsp; 如图所示</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210130114024.png"></p><p>​&emsp;​&emsp; 出现如图字样，说明安装成功，再连续回车3次即可。安装成功会显示密钥路径，根据路径找到文件，打开<code>id_rsa.pub</code>文件，将其内容全部复制。</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210130114040.png"></p><p>​&emsp;​&emsp;打开github网站，点击设置，如图。粘贴上一步复制的内容到Key位置，Title随便输入。</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210130114115.png"></p><p>​&emsp;​&emsp;输入</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br></pre></td></tr></table></figure><p>  ​&emsp;​&emsp;出现下图表示配置成功。</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> Hi jiangnan1q! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span></span><br></pre></td></tr></table></figure><p>  ​&emsp;​&emsp;如图所示</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210130114330.png"></p><h2 id="hexo安装及部署"><a href="#hexo安装及部署" class="headerlink" title="hexo安装及部署"></a>hexo安装及部署</h2><ul><li><strong>3.1、hexo 安装</strong></li></ul><p>​&emsp;​&emsp;打开powershell，输入命令 <code>npm install -g hexo-cli</code> </p><ul><li><strong>3.2、初始化hexo</strong></li></ul><p>​&emsp;​&emsp;在你想要安装hexo的位置新建一个空文件夹，在powershell中进入该目录，输入命令 ```hexo init`` ，初始化成功如下图：</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210201144145.png"></p><p>​&emsp;​&emsp;目录结构如图所示：<br><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/image-20210201144230359.png"></p><ul><li><strong>3.3、测试hexo</strong></li></ul><p>​&emsp;​&emsp;使用以下命令启动hexo：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>​&emsp;​&emsp;打开浏览器，输入localhost:4000，查看hexo是否成功初始化。</p><p>​&emsp;​&emsp;初始化的界面如下所示：</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210201144657.png"></p><ul><li><strong>3.4、hexo部署</strong></li></ul><p>​&emsp;​&emsp;在powershell中依次执行以下命令</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>​&emsp;​&emsp;打开hexo目录下的_config.yml文件，拉倒最下面，按照图片配置，其中repository是前面新建的xxx.github.io的地址。<br><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/image-20210201150151242.png"></p><p>​&emsp;​&emsp;ps：建议使用能够检查yaml语法的编辑器，避免由于缩进错误引起的语法错误。</p><p>​&emsp;​&emsp;最后使用 <code>hexo d</code> 完成远程部署。</p><ul><li><p><strong>3.5、关于部署与个人域名的注意事项</strong></p><p>由于hexo在部署的时候会将本地的文件同步到远程，而之前 <font color=#0000FF ><strong>2.2、绑定个人域名</strong></font> 时自动生成的CNAME文件会被删除。有以下两种方式：</p><p>​     ①进入hexo根目录下/.deploy_git，输入以下命令</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull</span><br></pre></td></tr></table></figure><p>​&emsp;​&emsp;​&emsp;等待文件同步完成后，拷贝CNAME文件到hexo根目录/source/下</p><p>​            执行以下命令即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>​&emsp;​&emsp;​&emsp;​②直接进入hexo根目录下/source/，创建文件CNAME（没有文件格式，使用TXT文本打开进行编辑），输入内容为个人域名，如下图：</p><p><img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/20210130113528.png"></p><p>​&emsp;​&emsp;​&emsp;之后同样执行以下命令即可完成部署。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>​&emsp;最后，放上今天刚获得的表情包。</p><p>   <img src="https://sxxspace.oss-cn-hangzhou.aliyuncs.com/image/Expression-Package-2021-02-01.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="posts/4a17b156.html"/>
      <url>posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
